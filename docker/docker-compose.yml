version: '3.7'
services:
  database:
    # build:
    #   context: ./postgresql
      # args:
      #   uid: 1000
      #   gid: 1000
    container_name: ${PREFIX_CONTAINER_NAME}postgresql_db
    image: postgres
    networks:
      static_network:
        ipv4_address: 172.20.200.4
    ports:
      - 61543:5432
    # volumes:
    #   - ./postgresql/data/:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data
    # command:
    #   - usermod -u 1000:1000 /var/lib/postgresql/data
      # - groupadd -g 1000 postgresql && useradd -lm -u 1000 -g 1000 postgresql
    # user: 1000:1000
    restart: always
  app:
    container_name: ${PREFIX_CONTAINER_NAME}api
    image: node:16
    working_dir: /var/www
    restart: always
    # build:
    #   context: ./api
    volumes:
      - ../api:/var/www
      # - ../api/package.json:/var/www/package.json
      # - ../api/package-lock.json:/var/www/package-lock.json
    command: bash -c "npm install && npm run dev"
    ports:
      - 3000:3000
    user: 1000:1000
    networks:
      static_network:
        ipv4_address: 172.20.200.5
    depends_on:
      - database
  web:
    container_name: ${PREFIX_CONTAINER_NAME}web
    image: node:16
    working_dir: /var/www
    restart: always
    # build:
    #   context: ./api
    volumes:
      - ../web:/var/www
      # - ../web/package.json:/var/www/package.json
      # - ../web/package-lock.json:/var/www/package-lock.json
    user: 1000:1000
    command: bash -c "yarn install && yarn dev"
    ports:
      - 8080:8080
    networks:
      static_network:
        ipv4_address: 172.20.200.6
    depends_on:
      - app

networks:
  static_network:
    ipam:
      config:
        - subnet: 172.20.200.1/24
